public void PiedraPapelTijeras()
{
    Console.WriteLine("Juego del piedra papel y tijeras");
    Console.WriteLine("--------------------------------");
    Console.WriteLine("En este juego gana quien saque un elemento superior al del rival");
    Console.WriteLine("Papel gana a piedra, pero pierde contra tijeras");
    Console.WriteLine("Piedra gana a tijeras, pero pierde contra papel");
    Console.WriteLine("Tijera gana a papel, pero pierde contra piedra");
    Console.WriteLine();

    string elemento1 = "";
    const string piedra = "piedra";
    const string papel = "papel";
    const string tijeras = "tijeras";
    string elemento2String = "";
    int vidasJugador = 3;
    int vidasMaquina = 3;

    Random random = new Random(); //Llamamos al objeto random para utilizarlo más adelante generándonos un número aleatorio.

    do //Bucle que repetirá todo el codigo de instrucciones del PiedraPapelTijeras.
    {
        Console.Write("Introduce el primer elemento a jugar (Piedra/Papel/Tijeras): ");
        do //Bucle que pregunta al usuario por un valor para jugar al PiedraPapelTijeras y comprueba que sea un valor válido para el juego.
        {
            try
            {
                elemento1 = Console.ReadLine();
                elemento1 = elemento1.ToLower(); //Transformamos el valor introducido por el usuario en minusculas para igualar todas las variables.

                if (elemento1 != piedra && elemento1 != papel && elemento1 != tijeras)
                {
                    Console.Write("El valor introducido no es válido, tienes que introducir -> (Piedra / Papel / Tijeras): ");
                }
            }
            catch (Exception e) { Console.WriteLine($"e.Message"); }
        } while (elemento1 != "piedra" && elemento1 != "papel" && elemento1 != "tijeras"); //La condición del bucle solo dejará de ejecutar el bucle si el valor es piedra/papel/tijeras.

        int elemento2 = random.Next(1, 4); //Variable que almacena un número aleatorio entre 1 y 3.

        elemento2String = ElementoMaquina(elemento2); //Enviamos el valor de elemento2 a la función ElementoMaquina que nos comprobará si el valor resuelto es Piedra, Papel, o Tijeras.

        //Comparaciones de las dos variables del juego.
        if ((elemento1 == "papel" && elemento2String == "piedra") ||
            (elemento1 == "piedra" && elemento2String == "tijeras") ||
            (elemento1 == "tijeras" && elemento2String == "papel"))
        {
            Console.WriteLine("El jugador gana, una vida menos para la máquina");
            Console.WriteLine();
            vidasMaquina--;
            Console.WriteLine($"Al jugador le quedan {vidasJugador} vidas, y a la máquina le quedan {vidasMaquina} vidas");
            Thread.Sleep(2500);
        }
        else if (elemento1 == elemento2String)
        {
            Console.WriteLine("Empate, sigan jugando");
            Console.WriteLine($"Al jugador le quedan {vidasJugador} vidas, y a la máquina le quedan {vidasMaquina} vidas");
            Thread.Sleep(2500);
        }
        else
        {
            Console.WriteLine("La máquina gana, una vida menos para el jugador.");
            Console.WriteLine();
            vidasJugador--;
            Console.WriteLine($"Al jugador le quedan {vidasJugador} vidas, y a la máquina le quedan {vidasMaquina} vidas");
            Thread.Sleep(2500);
            
        }
        Console.WriteLine();
        Console.Clear();
        Console.WriteLine($"Al jugador le quedan {vidasJugador} vidas, y a la máquina le quedan {vidasMaquina} vidas");

    } while (vidasMaquina != 0 && vidasJugador != 0);

    if (vidasJugador == 0)
    {
        Console.WriteLine("Te has quedado sin vidas, la máquina gana la partida.");
        Console.WriteLine();
        repetirPartida();
    }
    if (vidasMaquina == 0)
    {
        Console.WriteLine("La máquina se ha quedado sin vidas, ganas la partida.");
        Console.WriteLine();
        repetirPartida();
    }

    void repetirPartida()
    {
        string respuesta = ""; //Variable de uso local de la funcion para almacenar la respuesta del usuario.
        do //Bucle para preguntar al usuario una respuesta hasta que entre en nuestros valores válidos (S/N).
        {
            try //Comprobamos que sean valores válidos (S/N).
            {
                Console.Write("¿Quieres volver a jugar? (S/N): ");
                respuesta = Console.ReadLine();
                respuesta = respuesta.ToLower(); //Convertimos la respuesta a minúscula para igualar las condiciones.
            }
            catch (Exception e) { Console.WriteLine($"{e.Message}"); }
        } while (respuesta != "s" && respuesta != "n");

        if (respuesta == "s") //Si el usuario introduce la 's' entonces volveremos a inciar el programa.
        {
            PiedraPapelTijeras();
        }
        else { Console.WriteLine("Entonces el juego ha finalizado"); }
    }

    string ElementoMaquina(int elemento2)
    {
        //Si el valor del número aleatorio anterior es 1 se almacenará el valor de "PIEDRA", si es 2 será "PAPEL", y si es 3 será "TIJERAS".
        if (elemento2 == 1)
        {
            elemento2String = piedra;
        }
        else if (elemento2 == 2)
        {
            elemento2String = papel;
        }
        else if (elemento2 == 3)
        {
            elemento2String = tijeras;
        }
        Console.WriteLine($"La máquina ha elegido {elemento2String} contra el jugador que ha elegido {elemento1}");
        return elemento2String;
    }
}
